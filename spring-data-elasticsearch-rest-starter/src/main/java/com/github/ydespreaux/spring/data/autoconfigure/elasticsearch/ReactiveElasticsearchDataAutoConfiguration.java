/* * Copyright (C) 2018 Yoann Despréaux * * This program is free software; you can redistribute it and/or modify * it under the terms of the GNU General Public License as published by * the Free Software Foundation; either version 2 of the License, or * (at your option) any later version. * * This program is distributed in the hope that it will be useful, * but WITHOUT ANY WARRANTY; without even the implied warranty of * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the * GNU General Public License for more details. * * You should have received a copy of the GNU General Public License * along with this program; see the file COPYING . If not, write to the * Free Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA. * * Please send bugreports with examples or suggestions to yoann.despreaux@believeit.fr */package com.github.ydespreaux.spring.data.autoconfigure.elasticsearch;import com.github.ydespreaux.spring.data.elasticsearch.client.reactive.DefaultReactiveRestElasticsearchClient;import com.github.ydespreaux.spring.data.elasticsearch.client.reactive.ReactiveRestElasticsearchClient;import com.github.ydespreaux.spring.data.elasticsearch.core.ReactiveElasticsearchOperations;import com.github.ydespreaux.spring.data.elasticsearch.core.ReactiveElasticsearchTemplate;import com.github.ydespreaux.spring.data.elasticsearch.core.ResultsMapper;import com.github.ydespreaux.spring.data.elasticsearch.core.converter.ElasticsearchConverter;import com.github.ydespreaux.spring.data.elasticsearch.core.triggers.TriggerManager;import lombok.extern.slf4j.Slf4j;import org.elasticsearch.client.RestHighLevelClient;import org.reactivestreams.Publisher;import org.springframework.boot.autoconfigure.condition.ConditionalOnClass;import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;import org.springframework.context.annotation.Bean;import org.springframework.context.annotation.Configuration;import org.springframework.context.annotation.Import;/** * Configuration providing beans for Reactive ElasticSearch operation. * * @author Yoann Despréaux * @since 1.0.0 */@Slf4j@Configuration@ConditionalOnClass({RestHighLevelClient.class, Publisher.class})@Import(ElasticsearchDataAutoConfiguration.class)public class ReactiveElasticsearchDataAutoConfiguration extends ElasticsearchConfigurationSupport {    @Bean    @ConditionalOnMissingBean    ReactiveRestElasticsearchClient reactiveRestElasticsearchClient(@SuppressWarnings("SpringJavaInjectionPointsAutowiringInspection") final RestHighLevelClient client) {        return new DefaultReactiveRestElasticsearchClient(client);    }    @Bean    @ConditionalOnMissingBean    ReactiveElasticsearchOperations reactiveRestElasticsearchTemplate(            final ReactiveRestElasticsearchClient client,            final ElasticsearchConverter converter,            final ResultsMapper resultsMapper,            final TriggerManager triggerManager) {        return new ReactiveElasticsearchTemplate(client, converter, resultsMapper, triggerManager);    }}