/* * Copyright (C) 2018 Yoann Despréaux * * This program is free software; you can redistribute it and/or modify * it under the terms of the GNU General Public License as published by * the Free Software Foundation; either version 2 of the License, or * (at your option) any later version. * * This program is distributed in the hope that it will be useful, * but WITHOUT ANY WARRANTY; without even the implied warranty of * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the * GNU General Public License for more details. * * You should have received a copy of the GNU General Public License * along with this program; see the file COPYING . If not, write to the * Free Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA. * * Please send bugreports with examples or suggestions to yoann.despreaux@believeit.fr */package com.github.ydespreaux.spring.data.autoconfigure.elasticsearch;import com.github.ydespreaux.spring.data.elasticsearch.client.ClientLoggerAspect;import com.github.ydespreaux.spring.data.elasticsearch.client.DefaultRestElasticsearchClient;import com.github.ydespreaux.spring.data.elasticsearch.client.RestElasticsearchClient;import com.github.ydespreaux.spring.data.elasticsearch.config.IngestTemplate;import com.github.ydespreaux.spring.data.elasticsearch.config.TemplateProperties;import com.github.ydespreaux.spring.data.elasticsearch.core.ElasticsearchOperations;import com.github.ydespreaux.spring.data.elasticsearch.core.ElasticsearchTemplate;import com.github.ydespreaux.spring.data.elasticsearch.core.ResultsMapper;import com.github.ydespreaux.spring.data.elasticsearch.core.converter.ElasticsearchConverter;import com.github.ydespreaux.spring.data.elasticsearch.core.triggers.TriggerManager;import lombok.extern.slf4j.Slf4j;import org.elasticsearch.client.RestHighLevelClient;import org.springframework.boot.autoconfigure.condition.ConditionalOnClass;import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;import org.springframework.boot.context.properties.EnableConfigurationProperties;import org.springframework.context.annotation.Bean;import org.springframework.context.annotation.Configuration;import org.springframework.context.annotation.EnableAspectJAutoProxy;/** * Configuration providing beans for ElasticSearch operation. * * @author Yoann Despréaux * @since 1.0.0 */@Slf4j@Configuration@EnableAspectJAutoProxy@ConditionalOnClass({RestHighLevelClient.class})@EnableConfigurationProperties({TemplateProperties.class})public class ElasticsearchDataAutoConfiguration extends ElasticsearchConfigurationSupport {    @Bean    @ConditionalOnMissingBean    RestElasticsearchClient restElasticsearchClient(@SuppressWarnings("SpringJavaInjectionPointsAutowiringInspection") final RestHighLevelClient client) {        return new DefaultRestElasticsearchClient(client);    }    @Bean    @ConditionalOnMissingBean    public ElasticsearchOperations restElasticsearchTemplate(            final RestElasticsearchClient client,            final ElasticsearchConverter converter,            final ResultsMapper resultsMapper,            final TriggerManager triggerManager) {        return new ElasticsearchTemplate(client, converter, resultsMapper, triggerManager);    }    @Bean    IngestTemplate ingestTemplate(final TemplateProperties templateProperties, final ElasticsearchOperations operations) {        return new IngestTemplate(templateProperties, operations);    }    @Bean    ClientLoggerAspect clientLoggerAspect() {        return new ClientLoggerAspect();    }}