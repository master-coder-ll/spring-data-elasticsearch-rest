/* * Copyright (C) 2018 Yoann Despréaux * * This program is free software; you can redistribute it and/or modify * it under the terms of the GNU General Public License as published by * the Free Software Foundation; either version 2 of the License, or * (at your option) any later version. * * This program is distributed in the hope that it will be useful, * but WITHOUT ANY WARRANTY; without even the implied warranty of * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the * GNU General Public License for more details. * * You should have received a copy of the GNU General Public License * along with this program; see the file COPYING . If not, write to the * Free Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA. * * Please send bugreports with examples or suggestions to yoann.despreaux@believeit.fr */package com.github.ydespreaux.spring.data.elasticsearch.core.scroll;import lombok.Getter;import lombok.Setter;import org.springframework.data.domain.PageImpl;import org.springframework.data.domain.Pageable;import java.util.List;import java.util.Objects;/** * @param <T> generic type * @author Yoann Despréaux * @since 0.0.1 */@Getter@Setterpublic class ScrolledPageResult<T> extends PageImpl<T> implements ScrolledPage<T> {    /**     *     */    private String scrollId;    public ScrolledPageResult(List<T> content, Long totalElements, String scrollId, Pageable pageable) {        super(content, pageable, totalElements);        this.scrollId = scrollId;    }    /**     * @param items     the list items     * @param totalHits the total hits number     * @param scrollId  the scroll id     * @param <E>       generic type     * @return a new {@link ScrolledPageResult}     */    public static <E> ScrolledPageResult<E> of(List<E> items, Long totalHits, String scrollId) {        return new ScrolledPageResult<>(items, totalHits, scrollId, Pageable.unpaged());    }    @Override    public boolean equals(Object o) {        if (this == o) return true;        if (!(o instanceof ScrolledPageResult)) return false;        if (!super.equals(o)) return false;        ScrolledPageResult<?> that = (ScrolledPageResult<?>) o;        return Objects.equals(getScrollId(), that.getScrollId());    }    @Override    public int hashCode() {        return Objects.hash(super.hashCode(), getScrollId());    }}