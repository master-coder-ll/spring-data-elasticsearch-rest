/* * Copyright (C) 2018 Yoann Despréaux * * This program is free software; you can redistribute it and/or modify * it under the terms of the GNU General Public License as published by * the Free Software Foundation; either version 2 of the License, or * (at your option) any later version. * * This program is distributed in the hope that it will be useful, * but WITHOUT ANY WARRANTY; without even the implied warranty of * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the * GNU General Public License for more details. * * You should have received a copy of the GNU General Public License * along with this program; see the file COPYING . If not, write to the * Free Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA. * * Please send bugreports with examples or suggestions to yoann.despreaux@believeit.fr */package com.github.ydespreaux.spring.data.elasticsearch.reactive.repositories.template;import com.github.ydespreaux.spring.data.elasticsearch.annotations.Query;import com.github.ydespreaux.spring.data.elasticsearch.entities.Article;import com.github.ydespreaux.spring.data.elasticsearch.repository.ReactiveElasticsearchRepository;import reactor.core.publisher.Flux;import reactor.core.publisher.Mono;/** * @author Yoann Despréaux * @since 1.0.0 */public interface ReactiveArticleRepository extends ReactiveElasticsearchRepository<Article, String> {    /**     * @param entrepot     * @return     */    Flux<Article> findArticleByEntrepotOrderByNameDesc(Article.EnumEntrepot entrepot);    /**     * @param description     * @return     */    Mono<Long> countByDescriptionContains(String description);    /**     * @param entrepot     * @return     */    Mono<Long> countArticleByEntrepot(Article.EnumEntrepot entrepot);    Mono<Article> findByName(String name);    @Query("{\"match\" : {\"name\" : \"?0\"}}")    Mono<Article> findByNameQuery(String name);    @Query("{\"match\" : {\"entrepot\" : \"?0\"}}")    Flux<Article> findByEntrepotQuery(Article.EnumEntrepot entrepot);    @Query    Flux<Article> findByEntrepot(Article.EnumEntrepot entrepot);    @Query(name = "findByEntrepot")    Flux<Article> findByEntrepotOrderByNameAsc(Article.EnumEntrepot entrepot);}